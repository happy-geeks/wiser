name: Publish external server 2 live

on:
  workflow_dispatch:
  push:
    tags:
    - v*

jobs:
  build:

    runs-on: wiser-ext-2-live

    steps:
    - uses: actions/checkout@v4

    - name: Add NuGet Sources
      run: dotnet nuget add source --username ${{ vars.NUGET_USERNAME }} --password ${{ secrets.HAPPYGEEKSNUGET }} --store-password-in-clear-text --name HappyHorizon "${{ vars.NUGET_SOURCE }}"

    - name: Restore dependencies
      run: dotnet restore

    - name: Add GCLC package
      run: |
            $INSTALLED_PACKAGES = dotnet list Api package --format json
            $GCL_INSTALLED_VERSION = $INSTALLED_PACKAGES | ConvertFrom-Json | Select-Object -ExpandProperty projects | ForEach-Object { $_.frameworks | ForEach-Object { $_.topLevelPackages | Where-Object { $_.id -eq "GeeksCoreLibrary" } | Select-Object -ExpandProperty requestedVersion } }
            echo "Used GCL version: $GCL_INSTALLED_VERSION"
            dotnet add FrontEnd package GeeksCoreLibrary.Components.Configurator --version $GCL_INSTALLED_VERSION
            dotnet add Api package GeeksCoreLibrary.Components.Configurator --version $GCL_INSTALLED_VERSION

    - name: Copy partner styles
      run: Copy-Item -Path "${{ secrets.PARTNER_STYLES_LOCATION_EXT_2_LIVE }}\*" -Destination "${{ secrets.WORKER_LOCATION_EXT_2_LIVE }}\Core\Css\partner" -Recurse

    - name: Build
      run: dotnet build --no-restore

    #- name: Test
    #  run: dotnet test --no-build --verbosity normal

    - name: Enable maintenance notice API
      run: Rename-Item -Path "${{ secrets.PUBLISH_LOCATION_API_EXT_2_LIVE }}\_App_Offline.htm" -NewName "App_Offline.htm"

    - name: Enable maintenance notice FrontEnd
      run: Rename-Item -Path "${{ secrets.PUBLISH_LOCATION_FRONT_END_EXT_2_LIVE }}\_App_Offline.htm" -NewName "App_Offline.htm"

    - name: dotnet publish API
      run: |
        dotnet publish API -c Release -o "${{ secrets.PUBLISH_LOCATION_API_EXT_2_LIVE }}" --self-contained true  -r win-x64 /p:EnvironmentName=Live

      #substitute production appsettings entries to appsettings json file
    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: "${{ secrets.PUBLISH_LOCATION_API_EXT_2_LIVE }}/appsettings.json"
      env:
        GCL.SecretsBaseDirectory: "${{ secrets.SECRETS_BASE_DIRECTORY_API_EXT_2_LIVE }}"

    - name: Install NPM modules
      run: npm install
      working-directory: ${{ secrets.WORKING_DIRECTORY_EXT_2_LIVE }}

    - name: Activate Kendo UI License
      run: npx kendo-ui-license activate
      working-directory: ${{ secrets.WORKING_DIRECTORY_EXT_2_LIVE }}
      env:
        KENDO_UI_LICENSE: ${{ secrets.KENDO_UI_LICENSE }}

    - name: Compile scripts and styles with webpack
      run: node_modules\.bin\webpack --mode=production
      working-directory: ${{ secrets.WORKING_DIRECTORY_EXT_2_LIVE }}

    - name: dotnet publish front-end
      run: |
        dotnet publish FrontEnd -c Release -o "${{ secrets.PUBLISH_LOCATION_FRONT_END_EXT_2_LIVE }}" --self-contained true  -r win-x64 /p:EnvironmentName=Live

      #substitute production appsettings entries to appsettings json file
    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: "${{ secrets.PUBLISH_LOCATION_FRONT_END_EXT_2_LIVE }}/appsettings.json"
      env:
        GCL.SecretsBaseDirectory: "${{ secrets.SECRETS_BASE_DIRECTORY_FRONT_END_EXT_2_LIVE }}"

    - name: Disable maintenance notice API
      if: ${{ always() }}
      run: Rename-Item -Path "${{ secrets.PUBLISH_LOCATION_API_EXT_2_LIVE }}\App_Offline.htm" -NewName "_App_Offline.htm"

    - name: Disable maintenance notice FrontEnd
      if: ${{ always() }}
      run: Rename-Item -Path "${{ secrets.PUBLISH_LOCATION_FRONT_END_EXT_2_LIVE }}\App_Offline.htm" -NewName "_App_Offline.htm"

    - name: Remove NuGet Sources
      if: ${{ always() }}
      run: dotnet nuget remove source HappyHorizon