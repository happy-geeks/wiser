-- First add a module for the branch settings.
SET @newModuleId = (SELECT MAX(id) + 1 FROM wiser_module);
INSERT INTO `wiser_module` (`id`, `custom_query`, `count_query`, `options`, `name`, `icon`, `color`, `type`, `group`) VALUES (@newModuleId, '', '', '', 'Branch beheer', 'git', NULL, 'DynamicItems', 'Systeem');


-- Add the entity for the branch settings and link it to the new module.
INSERT INTO `wiser_entity` (`name`, `module_id`, `accepted_childtypes`, `icon`, `icon_add`, `show_in_tree_view`, `show_in_search`, `show_overview_tab`, `save_title_as_seo`, `show_title_field`, `friendly_name`, `save_history`, `default_ordering`, `icon_expanded`, `dedicated_table_prefix`, `delete_action`) VALUES ('branch_settings', @newModuleId, '', 'icon-git', 'icon-add', 0, 1, 1, 0, 0, 'Branch beheer', 1, 'link_ordering', 'icon-git', '', 'archive');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Standaard instellingen', '', 'textbox', 'Branch maken', 'defaults_branch_create', 'De standaard instellingen voor het maken van een branch. Dit moet een JSON object zijn zoals die ook wordt opgeslagen in de tabel \"wiser_branch_queue\". Hier kunnen dan alle standaardopties bepaald worden voor het maken van een nieuwe branch voor deze klant. Als er vaak branches worden gemaakt met (bijna) dezelfde opties, dan kan dit gebruikt worden om te zorgen dat die opties niet elke keer opnieuw ingevuld hoeven te worden.', 1, 50, 700, '{\"type\":\"json\"}', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Standaard instellingen', '', 'textbox', 'Branch mergen', 'defaults_branch_merge', 'De standaard instellingen voor het mergen van een branch. Dit moet een JSON object zijn zoals die ook wordt opgeslagen in de tabel \"wiser_branch_queue\". Hier kunnen dan alle standaardopties bepaald worden voor het mergen van een branch voor deze klant. Als er vaak branches worden gemerged met (bijna) dezelfde opties, dan kan dit gebruikt worden om te zorgen dat die opties niet elke keer opnieuw ingevuld hoeven te worden.', 2, 50, 700, '{\"type\":\"json\"}', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'Algemeen', 'input', 'Naam branch', 'branch_name', 'Dit is de naam van de branch in Wiser,&nbsp;<strong>niet</strong> de Git branch.', 3, 100, 0, '', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'Algemeen', 'textbox', 'Instellingen voor merge', 'branch_merge_settings', 'De instellingen die aan de WTS doorgegeven moeten worden om te bepalen welke data van de branch database overgezet moet worden naar de live database. Dit is hetzelfde JSON formaat als je vindt in de databasetabel \"wiser_branch_queue\". Als dit veld leeg is, wordt de waarde van \"Branch maken\" uit de tab \"Standaard instellingen\" gebruikt.', 4, 100, 0, '{\"type\":\"json\"}', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'Algemeen', 'input', 'E-mailadressen voor statusupdates', 'email_for_status_updates', 'De e-mailadressen waar statusupdates van de automatische deploy naar gestuurd moeten worden. Je kunt meerdere e-mailadressen invullen door ze te scheiden met een puntkomma (;).', 5, 100, 0, '', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'GitHub', 'secure-input', 'Access token', 'github_access_token', 'De access token van de APP op GitHub waarmee we de merge gaan uitvoeren. Zie <a href=\"https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/authenticating-as-a-github-app-installation\" target=\"_blank\">dit artikel</a> voor meer informatie. Deze APP moet voldoende rechten hebben om de branch \"develop\" naar \"staging\" te mergen en om \"staging\" naar \"main\" te mergen.', 6, 50, 0, '{\"type\":\"password\",\"securityMethod\":\"AES\",\"securityKey\":\"den@RUV3xcp6xpm5agq\"}', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'GitHub', 'date-time picker', 'Verloopdatum access token', 'github_access_token_expires', 'De datum waarop de access token verloopt, zodat we makkelijk kunnen terugzien wanneer een nieuwe aangemaakt moet worden.', 7, 20, 0, '{\"type\":\"datetime\"}', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'GitHub', 'input', 'Projectnaam', 'github_respository', 'De naam van het GitHub project (Repository) waarop de livegang uitgevoerd moet worden.&nbsp;', 8, 30, 0, '', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'WTS', 'multiselect', 'Configuraties om te pauzeren', 'configurations_to_pause', 'Indien de WTS \'s nachts bepaalde acties uitvoert die de automatische deploy in de weg kunnen zitten, of om andere redenen gepauzeerd moeten worden tijdens of voor de deploy, dan kun je hier selecteren welke dat moeten zijn.&nbsp;', 9, 60, 0, '{\"saveValueAsItemLink\":false}', 'SELECT\n    id,\n    CONCAT(\'(\', id, \') \', IFNULL(configuration, \'Onbekende configuratie\'), \' -> \', IFNULL(action, \'Onbekende actie\'), \' (Time ID: \', time_id, \')\') AS name\nFROM wts_services\nWHERE state != \'stopped\'\nORDER BY configuration ASC, time_id ASC', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'WTS', 'date-time picker', 'Configuraties pauzeren om', 'configurations_pause_time', 'De tijd van de dag waarop de configuraties, welke in het vorige veld zijn geselecteerd, gepauzeerd moeten worden.', 10, 20, 0, '{\"type\":\"time\"}', '', '', NULL, '', '', NULL, 0, 'normal', '0');
INSERT INTO `wiser_entityproperty` (`module_id`, `entity_name`, `tab_name`, `group_name`, `inputtype`, `display_name`, `property_name`, `explanation`, `ordering`, `width`, `height`, `options`, `data_query`, `depends_on_field`, `depends_on_operator`, `depends_on_value`, `language_code`, `depends_on_action`, `extended_explanation`, `label_style`, `label_width`) VALUES (@newModuleId, 'branch_settings', 'Automatische deploy', 'WTS', 'date-time picker', 'Deploy starten om', 'deploy_start_time', 'De tijd van de dag waarop de automatische deploy uitgevoerd moet worden. Let op dat deze tijd later moet zijn dan \"Tijd voor pauze\", anders heeft \"Tijd voor pauze\" geen nut.', 11, 20, 0, '{\"type\":\"time\"}', '', '', NULL, '', '', NULL, 0, 'normal', '0');

-- Add an item for the branch settings.
INSERT INTO `wiser_item` (entity_type, moduleid, title, added_by) VALUES ('branch_settings', @newModuleId, 'Standaard instellingen', 'Wiser');
SET @newItemId = LAST_INSERT_ID();

-- Set up the branch settings module to always open the newly created item.
UPDATE `wiser_module` SET `options` = CONCAT('{\n    \"gridViewMode\": true,\n    \"gridViewSettings\": {\n        \"informationBlock\": {\n            \"position\": \"left\",\n            \"width\": \"100%\",\n            \"openGridItemsInBlock\": true,\n            \"initialItem\": {\n                \"itemId\": ', @newItemId, ',\n                \"entityType\": \"branch_settings\",\n                \"readOnly\": false,\n                \"hideHeader\": true,\n                \"hideFooter\": true\n            }\n        }\n    },\n    \"onlyOneInstanceAllowed\": true\n}') WHERE `id` = @newModuleId;