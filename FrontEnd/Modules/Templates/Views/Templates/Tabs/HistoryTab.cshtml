@using GeeksCoreLibrary.Core.Cms.Attributes
@using System.Reflection
@using Api.Modules.Templates.Models.History
@model TemplateHistoryOverviewModel
@{
    var publishLogCounter = 0;
}
<div class="formview full historyContainer">
    <div class="row historyHeader">
        <div class="col col-6">
            <h3>Oud</h3>
        </div>
        <div class="col col-6">
            <h3>Nieuw</h3>
        </div>
    </div>
    @foreach (var historyModel in Model.TemplateHistory)
    {
        for (var i = publishLogCounter; i < Model.PublishHistory.Count; i++)
        {
            if (@historyModel.ChangedOn < Model.PublishHistory[i].ChangedOn)
            {
                <div class="row historyLine">
                    <div class="col col-12 historyTagline">
                        <span><span class="k-icon k-i-edit"></span> Published Environment |</span>
                        <span><span class="k-icon k-i-calendar"></span> @Model.PublishHistory[i].ChangedOn |</span>
                        <span><span class="k-icon k-i-user"></span> door @Model.PublishHistory[i].ChangedBy </span>
                    </div>
                    @if (Model.PublishHistory[i].PublishLog.OldLive != Model.PublishHistory[i].PublishLog.NewLive)
                    {
                        <div class="col col-6">
                            <div class="item" data-label-style="float" data-label-width="0">
                                <span class="handler">&nbsp;</span>
                                <h4><label for="text_101">Live @Model.PublishHistory[i].PublishLog.OldLive</label></h4>
                                <span class="k-widget k-input k-state-default">
                                    <ins class="version live" title="live"></ins>
                                </span>
                            </div>
                        </div>


                        <div class="col col-6">
                            <div class="item" data-label-style="float" data-label-width="0">
                                <span class="handler">&nbsp;</span>
                                <h4><label for="text_102">Live @Model.PublishHistory[i].PublishLog.NewLive</label></h4>
                                <span class="k-widget k-input k-state-default">
                                    <ins class="version live" title="live"></ins>
                                </span>
                            </div>
                        </div>
                    }
                    @if (Model.PublishHistory[i].PublishLog.OldAccept != Model.PublishHistory[i].PublishLog.NewAccept)
                    {
                        <div class="col col-6">
                            <div class="item" data-label-style="float" data-label-width="0">
                                <span class="handler">&nbsp;</span>
                                <h4><label for="text_101">Accept @Model.PublishHistory[i].PublishLog.OldAccept</label></h4>
                                <span class="k-widget k-input k-state-default">
                                    <ins class="version accept" title="acceptatie"></ins>
                                </span>
                            </div>
                        </div>


                        <div class="col col-6">
                            <div class="item" data-label-style="float" data-label-width="0">
                                <span class="handler">&nbsp;</span>
                                <h4><label for="text_102">Accept @Model.PublishHistory[i].PublishLog.NewAccept</label></h4>
                                <span class="k-widget k-input k-state-default">
                                    <ins class="version accept" title="acceptatie"></ins>
                                </span>
                            </div>
                        </div>
                    }
                    @if (Model.PublishHistory[i].PublishLog.OldTest != Model.PublishHistory[i].PublishLog.NewTest)
                    {
                        <div class="col col-6">
                            <div class="item" data-label-style="float" data-label-width="0">
                                <span class="handler">&nbsp;</span>
                                <h4><label for="text_101">Test @Model.PublishHistory[i].PublishLog.OldTest</label></h4>
                                <span class="k-widget k-input k-state-default">
                                    <ins class="version test" title="test"></ins>
                                </span>
                            </div>
                        </div>


                        <div class="col col-6">
                            <div class="item" data-label-style="float" data-label-width="0">
                                <span class="handler">&nbsp;</span>
                                <h4><label for="text_102">Test @Model.PublishHistory[i].PublishLog.NewTest</label></h4>
                                <span class="k-widget k-input k-state-default">
                                    <ins class="version test" title="test"></ins>
                                </span>
                            </div>
                        </div>
                    }
                </div>
                publishLogCounter++;
            }
        }

        <div class="row historyLine">
            <div class="col col-12 historyTagline">
                @if (historyModel.Version <= Model.PublishedEnvironment.LiveVersion)
                {
                    <ins class="version live" title="live"></ins>
                }
                else if (historyModel.Version <= Model.PublishedEnvironment.AcceptVersion)
                {
                    <ins class="version accept" title="acceptatie"></ins>
                }
                else if (historyModel.Version <= Model.PublishedEnvironment.TestVersion)
                {
                    <ins class="version test" title="test"></ins>
                }
                <span><span class="k-icon k-i-edit"></span> Versie @historyModel.Version |</span>
                <span><span class="k-icon k-i-calendar"></span> @historyModel.ChangedOn |</span>
                <span><span class="k-icon k-i-user"></span> door @historyModel.ChangedBy </span>
            </div>
            @foreach (var change in historyModel.TemplateChanges)
            {
                if (change.Value.Key is bool)
                {
                    <div class="col col-6 checkLine">
                        <div class="item" data-label-style="normal" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <span class="inline">
                                <label class="checkbox">
                                    @if ((Boolean)change.Value.Value)
                                    {
                                        <input id="change.Key" name="change.Key" type="checkbox" value="(Boolean)change.Value.Value" checked="checked" disabled>
                                    }
                                    else
                                    {
                                        <input id="change.Key" name="change.Key" type="checkbox" value="(Boolean)change.Value.Value" disabled>
                                    }
                                    <span>@change.Key</span>
                                </label>
                            </span>
                        </div>
                    </div>
                    <div class="col col-6 checkLine">
                        <div class="item" data-label-style="normal" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <span class="inline">
                                <label class="checkbox">
                                    @if ((Boolean)change.Value.Key)
                                    {
                                        <input id="change.Key" name="change.Key" type="checkbox" value="(Boolean)change.Value.Key" checked="checked" disabled>
                                    }
                                    else
                                    {
                                        <input id="change.Key" name="change.Key" type="checkbox" value="(Boolean)change.Value.Key" disabled>
                                    }
                                    <span>@change.Key</span>
                                </label>
                            </span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col col-6">
                        <div class="item" data-label-style="float" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <h4><label for="text_101">@change.Key</label></h4>
                            <span class="k-widget k-input k-state-default">
                                <input type="text" id="text_101" class="textField k-input" autocomplete="off" value="@change.Value.Value" disabled />
                            </span>
                        </div>
                    </div>


                    <div class="col col-6">
                        <div class="item" data-label-style="float" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <h4><label for="text_102">@change.Key</label></h4>
                            <span class="k-widget k-input k-state-default">
                                <input type="text" id="text_102" class="textField k-input" autocomplete="off" value="@change.Value.Key" disabled />
                            </span>
                        </div>
                    </div>
                }
            }
            @if (historyModel.LinkedTemplateChanges.Count > 0)
            {
                <div class="row historyLine">
                    <div class="col col-12 historyTagline">
                        <span>Linked Templates:</span>
                    </div>
                </div>

                @foreach (KeyValuePair<string, KeyValuePair<object, object>> change in historyModel.LinkedTemplateChanges)
                {
                    <div class="col col-6 checkLine">
                        <div class="item" data-label-style="normal" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <span class="inline">
                                <label class="checkbox">
                                    @if ((Boolean)change.Value.Value)
                                    {
                                        <input id="change.Key" name="change.Key" type="checkbox" value="(Boolean)change.Value.Value" checked="checked" disabled>
                                    }
                                    else
                                    {
                                        <input id="change.Key" name="change.Key" type="checkbox" value="(Boolean)change.Value.Value" disabled>
                                    }
                                    <span>@change.Key</span>
                                </label>
                            </span>
                        </div>
                    </div>
                    <div class="col col-6 checkLine">
                        <div class="item" data-label-style="normal" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <span class="inline">
                                <label class="checkbox">
                                    @if ((Boolean)change.Value.Key)
                                    {
                                        <input id="@change.Key" name="@change.Key" type="checkbox" value="@change.Value.Key" checked="checked" disabled>
                                    }
                                    else
                                    {
                                        <input id="@change.Key" name="@change.Key" type="checkbox" value="@change.Value.Key" disabled>
                                    }
                                    <span>@change.Key</span>
                                </label>
                            </span>
                        </div>
                    </div>
                }
            }
            @if (historyModel.DynamicContentChanges.Count > 0)
            {
                <div class="row historyLine">
                    <div class="col col-12 historyTagline">
                        <span>Dynamic Content:</span>
                    </div>
                </div>

                @foreach (var dynamicHistory in historyModel.DynamicContentChanges)
                {
                    <div class="col col-12 historyTagline">
                        <span><span class="k-icon k-i-edit"></span> Versie @dynamicHistory.GetVersion() |</span>
                        <span><span class="k-icon k-i-calendar"></span> @dynamicHistory.GetDisplayChangedOn() |</span>
                        <span><span class="k-icon k-i-user"></span> door @dynamicHistory.GetChangedBy() </span>
                    </div>
                    @if (dynamicHistory.GetChanges() != null)
                    {
                        @foreach (var historyChange in dynamicHistory.GetChanges())
                        {
                            var propertyAttribute = historyChange.GetPropertyAttribute();

                            <partial name="../Partials/HistoryInputGenerator" model="new KeyValuePair<CmsPropertyAttribute, KeyValuePair<PropertyInfo, object>>(propertyAttribute, new KeyValuePair<PropertyInfo, object>(@historyChange.GetPropertyInfo(), historyChange.GetOldValue()))" />
                            <partial name="../Partials/HistoryInputGenerator" model="new KeyValuePair<CmsPropertyAttribute, KeyValuePair<PropertyInfo, object>>(propertyAttribute, new KeyValuePair<PropertyInfo, object>(@historyChange.GetPropertyInfo(), historyChange.GetNewValue()))" />
                        }
                    }
                }
            }
        </div>
    }
</div>