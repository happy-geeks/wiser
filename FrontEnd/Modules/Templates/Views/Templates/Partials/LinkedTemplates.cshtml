@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using GeeksCoreLibrary.Modules.Templates.Enums
@model Api.Modules.Templates.Models.Template.LinkedTemplatesModel

<div class="linkedTemplates">
    <div class="item" style="width: 50%;">
        <span class="handler">&nbsp;</span>
        <h4><label for="css-templates">@Localizer["Linked (S)CSS templates"]</label></h4>
        <ul id="scss-checklist" class="checkboxlist ">
            @foreach (var linkedTemplate in Model.LinkedScssTemplates)
            {
                <li>
                    <label class="checkbox">
                        <input type="checkbox" value="1" checked="checked" data-template="@linkedTemplate.TemplateId">
                        <span>@linkedTemplate.Path >> @linkedTemplate.TemplateName (SCSS)</span>
                    </label>
                </li>
            }
            @foreach (var linkOption in Model.LinkOptionsTemplates)
            {
                if (linkOption.LinkType is TemplateTypes.Scss or TemplateTypes.Css)
                {
                    <li>
                        <label class="checkbox">
                            <input type="checkbox" value="1" data-template="@linkOption.TemplateId">
                            <span>@linkOption.Path >> @linkOption.TemplateName (SCSS)</span>
                        </label>
                    </li>
                }
            }
        </ul>
    </div>

    <div class="item" style="width: 50%;">
        <span class="handler">&nbsp;</span>
        <h4><label for="js-templates">@Localizer["Linked JS templates"]</label></h4>
        <ul id="js-checklist" class="checkboxlist ">
            @foreach (var linkedTemplate in Model.LinkedJavascript)
            {
                <li>
                    <label class="checkbox">
                        <input type="checkbox" value="1" checked="checked" data-template="@linkedTemplate.TemplateId">
                        <span>@linkedTemplate.Path >> @linkedTemplate.TemplateName (JS)</span>
                    </label>
                </li>
            }
            @foreach (var linkOption in Model.LinkOptionsTemplates)
            {
                if (linkOption.LinkType == TemplateTypes.Js)
                {
                    <li>
                        <label class="checkbox">
                            <input type="checkbox" value="1" data-template="@linkOption.TemplateId">
                            <span>@linkOption.Path >> @linkOption.TemplateName (JS)</span>
                        </label>
                    </li>
                }
            }
        </ul>
    </div>
</div>