@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model Api.Modules.Templates.Models.Template.TemplateSettingsModel

<div class="triggerTiming">
    <div class="item" style="width: 100%;">
        <h4><label for="triggerTable">@Localizer["Table"]</label></h4>
        <div class="flex-container">
            <select id="triggerTable" class="combo-select" data-kendo-control="kendoDropDownList" data-filter="contains">
                <option value="">@Localizer["Choose a table"]</option>
            </select>
        </div>
        <div class="form-hint"><span>@Localizer["For which table this trigger is created or modified."]</span></div>
    </div>
    <div class="item" style="width: 100%;">
        <h4><label>@Localizer["Timing"]</label></h4>

        @foreach (var value in Enum.GetValues(Model.TriggerTiming.GetType()))
        {
            @if ((int)value == 0) continue;

            <label class="radio">
                <input name="triggerTiming" type="radio" value="@((int)value)" @((int)Model.TriggerTiming == (int)value ? "checked" : "")/>
                <span>@value.ToString()</span>
            </label>
        }
    </div>
    <div class="item" style="width: 100%;">
        <h4><label for="triggerEvent">@Localizer["Event"]</label></h4>
        <div class="flex-container">
            <select id="triggerEvent" class="combo-select">
                <!option value="">@Localizer["Choose an event"]</!option>
                @foreach (var value in Enum.GetValues(Model.TriggerEvent.GetType()))
                {
                    @if ((int)value == 0) continue;

                    <!option value="@((int)value)" @((int)Model.TriggerEvent == (int)value ? "selected" : "")>@value.ToString()</!option>
                }
            </select>
        </div>
        <div class="form-hint"><span>@Localizer["For what kind of event the trigger will be executed for."]</span></div>
    </div>
</div>