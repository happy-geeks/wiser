@using FrontEnd.Modules.Templates.Models
@using GeeksCoreLibrary.Modules.Templates.Enums
@model HistoryTabViewModel
@{
    var publishLogCounter = 0;
}

@foreach (var historyModel in Model.TemplateHistory)
{
    for (var i = publishLogCounter; i < Model.PublishHistory.Count; i++)
    {
        if (@historyModel.ChangedOn < Model.PublishHistory[i].ChangedOn)
        {
            <div class="row historyLine">
                <div class="col col-12 historyTagline">
                    <span><span class="k-icon k-i-edit"></span> <b>Published Environment</b> | </span>
                    <span><span class="k-icon k-i-calendar"></span> @Model.PublishHistory[i].GetDisplayChangedOn() | </span>
                    <span><span class="k-icon k-i-user"></span> door @Model.PublishHistory[i].ChangedBy </span>
                </div>
                @if (Model.PublishHistory[i].PublishLog.OldLive != Model.PublishHistory[i].PublishLog.NewLive)
                {
                    <div class="col col-6">
                        <div class="item" data-label-style="float" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <h4><label for="text_101">Live @Model.PublishHistory[i].PublishLog.OldLive</label></h4>
                            <span class="k-widget k-input k-state-default">
                                <ins class="version live" title="live"></ins>
                            </span>
                        </div>
                    </div>


                    <div class="col col-6">
                        <div class="item" data-label-style="float" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <h4><label for="text_102">Live @Model.PublishHistory[i].PublishLog.NewLive</label></h4>
                            <span class="k-widget k-input k-state-default">
                                <ins class="version live" title="live"></ins>
                            </span>
                        </div>
                    </div>
                }
                @if (Model.PublishHistory[i].PublishLog.OldAccept != Model.PublishHistory[i].PublishLog.NewAccept)
                {
                    <div class="col col-6">
                        <div class="item" data-label-style="float" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <h4><label for="text_101">Accept @Model.PublishHistory[i].PublishLog.OldAccept</label></h4>
                            <span class="k-widget k-input k-state-default">
                                <ins class="version accept" title="acceptatie"></ins>
                            </span>
                        </div>
                    </div>


                    <div class="col col-6">
                        <div class="item" data-label-style="float" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <h4><label for="text_102">Accept @Model.PublishHistory[i].PublishLog.NewAccept</label></h4>
                            <span class="k-widget k-input k-state-default">
                                <ins class="version accept" title="acceptatie"></ins>
                            </span>
                        </div>
                    </div>
                }
                @if (Model.PublishHistory[i].PublishLog.OldTest != Model.PublishHistory[i].PublishLog.NewTest)
                {
                    <div class="col col-6">
                        <div class="item" data-label-style="float" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <h4><label for="text_101">Test @Model.PublishHistory[i].PublishLog.OldTest</label></h4>
                            <span class="k-widget k-input k-state-default">
                                <ins class="version test" title="test"></ins>
                            </span>
                        </div>
                    </div>


                    <div class="col col-6">
                        <div class="item" data-label-style="float" data-label-width="0">
                            <span class="handler">&nbsp;</span>
                            <h4><label for="text_102">Test @Model.PublishHistory[i].PublishLog.NewTest</label></h4>
                            <span class="k-widget k-input k-state-default">
                                <ins class="version test" title="test"></ins>
                            </span>
                        </div>
                    </div>
                }
            </div>
            publishLogCounter++;
        }
    }

    <div class="row historyLine">
        <div class="col col-12 historyTagline">
            @if (historyModel.Version <= Model.PublishedEnvironment.LiveVersion)
            {
                <ins class="version live" title="live"></ins>
            }
            else if (historyModel.Version <= Model.PublishedEnvironment.AcceptVersion)
            {
                <ins class="version accept" title="acceptatie"></ins>
            }
            else if (historyModel.Version <= Model.PublishedEnvironment.TestVersion)
            {
                <ins class="version test" title="test"></ins>
            }
            <span><span class="k-icon k-i-edit"></span> <b>Versie @historyModel.Version</b> | </span>
            <span><span class="k-icon k-i-calendar"></span> @historyModel.GetDisplayChangedOn() | </span>
            <span><span class="k-icon k-i-user"></span> door @historyModel.ChangedBy </span>
        </div>
        @foreach (var change in historyModel.TemplateChanges)
        {
            if (change.Value.Item1 is bool booleanNewValue && change.Value.Item2 is bool booleanOldValue)
            {
                <div class="col col-6 checkLine">
                    <div class="item" data-label-style="normal" data-label-width="0">
                        <span class="handler">&nbsp;</span>
                        <span class="inline">
                            <label class="checkbox">
                                @if (booleanOldValue)
                                {
                                    <input id="change.Key" name="change.Key" type="checkbox" checked="checked" disabled>
                                }
                                else
                                {
                                    <input id="change.Key" name="change.Key" type="checkbox" disabled>
                                }
                                <span>@change.Key</span>
                            </label>
                        </span>
                    </div>
                </div>
                <div class="col col-6 checkLine">
                    <div class="item" data-label-style="normal" data-label-width="0">
                        <span class="handler">&nbsp;</span>
                        <span class="inline">
                            <label class="checkbox">
                                @if (booleanNewValue)
                                {
                                    <input id="change.Key" name="change.Key" type="checkbox" checked="checked" disabled>
                                }
                                else
                                {
                                    <input id="change.Key" name="change.Key" type="checkbox" disabled>
                                }
                                <span>@change.Key</span>
                            </label>
                        </span>
                    </div>
                </div>
            }
            else if (change.Value.Item3 is TemplateTypes.Html or TemplateTypes.Query or TemplateTypes.Js or TemplateTypes.Css or TemplateTypes.Scss or TemplateTypes.Xml)
            {
                <div class="col col-12 diffField" data-type="@change.Value.Item3" field-name="@change.Key">
                    <span class="oldValue" value="@change.Value.Item2">Old value placeholder</span>
                    <span class="newValue" value="@change.Value.Item1">New value placeholder</span>
                </div>
            }
            else
            {
                <div class="col col-6">
                    <div class="item" data-label-style="float" data-label-width="0">
                        <span class="handler">&nbsp;</span>
                        <h4><label for="@change.Key">@change.Key</label></h4>
                        <span class="k-widget k-input k-state-default">
                            <input type="text" id="text_101" class="textField k-input" autocomplete="off" value="@change.Value.Item2" disabled/>
                        </span>
                    </div>
                </div>
                
                <div class="col col-6">
                    <div class="item" data-label-style="float" data-label-width="0">
                        <span class="handler">&nbsp;</span>
                        <h4><label for="text_102">@change.Key</label></h4>
                        <span class="k-widget k-input k-state-default">
                            <input type="text" id="text_102" class="textField k-input" autocomplete="off" value="@change.Value.Item1" disabled />
                        </span>
                    </div>
                </div>
            }
        }
        @if (historyModel.LinkedTemplateChanges.Count > 0)
        {
            <div class="row historyLine">
                <div class="col col-12 historyTagline">
                    <span>Linked Templates:</span>
                </div>
            </div>

            @foreach (var change in historyModel.LinkedTemplateChanges)
            {
                <div class="col col-6 checkLine">
                    <div class="item" data-label-style="normal" data-label-width="0">
                        <span class="handler">&nbsp;</span>
                        <span class="inline">
                            <label class="checkbox">
                                @if ((Boolean)change.Value.Item2)
                                {
                                    <input id="change.Key" name="change.Key" type="checkbox" checked="checked" disabled>
                                }
                                else
                                {
                                    <input id="change.Key" name="change.Key" type="checkbox" disabled>
                                }
                                <span>@change.Key</span>
                            </label>
                        </span>
                    </div>
                </div>
                <div class="col col-6 checkLine">
                    <div class="item" data-label-style="normal" data-label-width="0">
                        <span class="handler">&nbsp;</span>
                        <span class="inline">
                            <label class="checkbox">
                                @if ((Boolean)change.Value.Item1)
                                {
                                    <input id="@change.Key" name="@change.Key" type="checkbox" checked="checked" disabled>
                                }
                                else
                                {
                                    <input id="@change.Key" name="@change.Key" type="checkbox" disabled>
                                }
                                <span>@change.Key</span>
                            </label>
                        </span>
                    </div>
                </div>
            }
        }
        @if (historyModel.DynamicContentChanges.Count > 0)
        {
            <div class="row historyLine historyDynamic">
                <div class="col col-12 historyTagline">
                    <span><b>Versie @historyModel.Version</b> dynamische content:</span>
                </div>
                @foreach (var dynamicHistory in historyModel.DynamicContentChanges)
                {
                    <div class="col col-12 historyTagline">
                        <span><span class="k-icon k-i-edit"></span> @dynamicHistory.Name (@dynamicHistory.Component) | Versie @dynamicHistory.Version | </span>
                        <span><span class="k-icon k-i-calendar"></span> @dynamicHistory.GetDisplayChangedOn() | </span>
                        <span><span class="k-icon k-i-user"></span> door @dynamicHistory.ChangedBy </span>
                    </div>
                    @if (dynamicHistory.ChangedFields != null)
                    {
                        @foreach (var pair in dynamicHistory.ChangedFields)
                        {
                            <partial name="/Modules/Templates/Views/DynamicContent/Partials/HistoryInputGenerator.cshtml" model="pair" />
                        }
                    }
                }
            </div>
        }
    </div>
}